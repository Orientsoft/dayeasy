var JsonFormat=function(){function format(n,t){var r="";switch(_typeof(n)){case"Null":r=_format_null(n);break;case"Boolean":r=_format_boolean(n);break;case"Number":r=_format_number(n);break;case"String":r=_format_string(n);break;case"Array":r=_format_array(n,t);break;case"Object":r=_format_object(n,t)}return r}function _format_null(n){return'<span class="json_null">null</span>'}function _format_boolean(n){return'<span class="json_boolean">'+n+"</span>"}function _format_number(n){return'<span class="json_number">'+n+"</span>"}function _format_string(n){return 0<=n.search(/^http/)&&(n='<a href="'+n+'" target="_blank" class="json_link">'+n+"</a>"),'<span class="json_string">"'+n+'"</span>'}function _format_indent(n,t){return'<span style="padding-left:'+2*(t-2)+'em;">'+n+"</span>"}function _format_key(n,t){return'<span class="json_key" style="padding-left:'+2*t+'em;">'+n+"</span>:"}function _format_array(n,t){for(var r=[],a=0,o=n.length;o>a;++a)r.push(format(n[a],t));return"["+r.join(",")+"]"}function _format_object(n,t){var r=[];for(var a in n)r.push(_format_key(a,t)+format(n[a],t+1));return"{<br/>"+r.join(",<br/>")+"<br/>"+_format_indent("}",t+1)}function _typeof(n){var t=typeof n,r=_toString.call(n);return null===n?"Null":"undefined"==t?"Undefined":"boolean"==t?"Boolean":"number"==t?"Number":"string"==t?"String":"[object Function]"==r?"Function":"[object Array]"==r?"Array":"[object Date]"==r?"Date":"Object"}function loadCssString(){var n=document.createElement("style");n.type="text/css";var t=Array.prototype.slice.apply(arguments).join("");try{n.appendChild(document.createTextNode(t))}catch(r){n.styleSheet.cssText=t}document.getElementsByTagName("head")[0].appendChild(n)}var _toString=Object.prototype.toString;loadCssString(".json_key{ color: purple;display:inline-block;}",".json_null{color: red;}",".json_boolean{ color: gray;}",".json_number{ color: blue;}",".json_string{ color: #077;}",".json_link{ color: #717171;}",".json_array_brackets{}");var _JsonFormat=function(origin_data){this.data="string"!=typeof origin_data?origin_data:JSON&&JSON.parse?JSON.parse(origin_data||"{}"):eval("("+origin_data+")")};return _JsonFormat.prototype={constructor:JsonFormat,toString:function(){return format(this.data,1)}},_JsonFormat}();